C_group <- df_DD %>% filter(C==1)  # why different?
# m(g,t|X)
C_group <- C_group %>%
filter((t_==t__) | (t_==g-1)) %>%
mutate(Yt = ifelse(t_==t,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA),
dY = Yt - Ygm1)
View(C_group)
# m(g,t|X)
C_group <- C_group %>%
filter((t_==t__) | (t_==g-1)) %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g__-1,Y,NA),
dY = Yt - Ygm1)
View(C_group)
# m(g,t|X)
C_group <- C_group %>%
filter((t_==t__) | (t_==g-1)) %>%
mutate(Yt = ifelse(t_==t__,Y,0),
Ygm1 = ifelse(t_==g__-1,Y,0)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt) - sum(Ygm1))
View(C_group)
# m(g,t|X)
df_reg$Yt = C_group %>% filter(t_==t__) %>% select(Y)
# m(g,t|X)
df_reg = data.frame()
df_reg$Yt = C_group %>% filter(t_==t__) %>% select(Y)
# m(g,t|X)
C_group <- C_group %>%
filter(t_==t__ | t_==g-1) %>%
mutate(Yt = ifelse(t_==t,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA),
dY = Yt - Ygm1) %>%
distinct(i_)
View(C_group)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
filter(t_==t__ | t_==g-1) %>%
mutate(Yt = ifelse(t_==t,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA),
dY = Yt - Ygm1) %>%
distinct(i_, .keep_all=TRUE)
View(C_group)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
filter(t_==t__ | t_==g-1) %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA),
dY = Yt - Ygm1) %>%
distinct(i_, .keep_all=TRUE)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA),
dY = Yt - Ygm1) %>%
distinct(i_, .keep_all=TRUE)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA),
dY = Yt - Ygm1) %>%
distinct(i_, .keep_all=TRUE)
View(C_group)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt) - sum(Ygm1)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
View(C_group)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt) - sum(Ygm1)) %>%
# ungroup() %>%
# distinct(i_, .keep_all=TRUE)
m0 <- lm('dY ~ x1+x2', data=C_group)
View(C_group)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt) - sum(Ygm1)) # %>%
View(C_group)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, rm.na=T) - sum(Ygm1, rm.na=T)) # %>%
View(C_group)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) # %>%
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
m0 <- lm('dY ~ x1+x2', data=C_group)
# loopppp
t__ <- 2
g__ <- 2
T_group <- df_DD %>% filter(G_==g__)
C_group <- df_DD %>% filter(G_==G_censored)  # why different?
C_group <- df_DD %>% filter(C==1)  # why different?
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
m0 <- lm('dY ~ x1+x2', data=C_group)
T_group <- T_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
Em1 <- mean(T_group$dY)
T_group$Em0 <- predict(m0, newdata=T_group)
Em0 <- predict(m0, newdata=T_group) %>% mean()
TE <- Em1 - Em0
print(mean(T_group$Y1) - mean(T_group$Y0))
print(mean(T_group$dY) - mean(T_group$dY))
print(TE)
# Reweight
Em0_reweright <- weighted.mean(T_group$Em0, T_group$phat)
print(Em1 - Em0_reweright)
print(mean(T_group$Y1) - mean(T_group$Y0))
View(T_group)
print(mean(df_DD%>%filter(t_==t__)%>%select(Y1)) - mean(df_DD%>%filter(t_==t__)%>%select(Y0)))
print(mean(df_DD%>%filter(t==t__)%>%select(Y1)) - mean(df_DD%>%filter(t==t__)%>%select(Y0)))
View(df_DD)
print(mean(df_DD%>%filter(t_==t__,G==g)%>%select(Y1)) - mean(df_DD%>%filter(t_==t__)%>%select(Y0)))
print(TE)
# ATT(g,t)
for (i in 1:nrow(results)) {
g__ <- results[i, group_variable]
t__ <- results[i, time_variable]
T_group <- df_DD %>% filter(G_==g__)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
m0 <- lm('dY ~ x1+x2', data=C_group)
# regression imputation DD
T_group <- T_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
Em1 <- mean(T_group$dY)
T_group$Em0 <- predict(m0, newdata=T_group)
Em0 <- predict(m0, newdata=T_group) %>% mean()
# ATT(g,t)
results[i,ATT] <- Em1 - Em0
# ATT(g,t) Reweight
results[i,ATT_reweight] <- weighted.mean(T_group$Em0, T_group$phat)
}
results$ATT <- NA
results$ATT_reweight <- NA
# ATT(g,t)
for (i in 1:nrow(results)) {
g__ <- results[i, group_variable]
t__ <- results[i, time_variable]
T_group <- df_DD %>% filter(G_==g__)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
m0 <- lm('dY ~ x1+x2', data=C_group)
# regression imputation DD
T_group <- T_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
Em1 <- mean(T_group$dY)
T_group$Em0 <- predict(m0, newdata=T_group)
Em0 <- predict(m0, newdata=T_group) %>% mean()
# ATT(g,t)
results[i,ATT] <- Em1 - Em0
# ATT(g,t) Reweight
results[i,ATT_reweight] <- weighted.mean(T_group$Em0, T_group$phat)
}
# ATT(g,t)
for (i in 1:nrow(results)) {
g__ <- results[i, group_variable]
t__ <- results[i, time_variable]
T_group <- df_DD %>% filter(G_==g__)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
m0 <- lm('dY ~ x1+x2', data=C_group)
# regression imputation DD
T_group <- T_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
Em1 <- mean(T_group$dY)
T_group$Em0 <- predict(m0, newdata=T_group)
Em0 <- predict(m0, newdata=T_group) %>% mean()
# ATT(g,t)
results[i,'ATT'] <- Em1 - Em0
# ATT(g,t) Reweight
results[i,'ATT_reweight'] <- weighted.mean(T_group$Em0, T_group$phat)
}
View(results)
# ATT(g,t)
for (i in 1:nrow(results)) {
g__ <- results[i, group_variable]
t__ <- results[i, time_variable]
T_group <- df_DD %>% filter(G_==g__)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
m0 <- lm('dY ~ x1+x2', data=C_group)
# regression imputation DD
T_group <- T_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
Em1 <- mean(T_group$dY)
T_group$Em0 <- predict(m0, newdata=T_group)
Em0 <- predict(m0, newdata=T_group) %>% mean()
# ATT(g,t)
results[i,'ATT'] <- Em1 - Em0
results[i,'ATT_reweight'] <- Em1 - weighted.mean(T_group$Em0, T_group$phat)
}
View(df %>% select(i,Gstar,phat))
df %>% select(i,Gstar,phat)
df %>% select(i,G_star,phat)
View(df %>% select(i,G_star,phat))
View(df %>% filter(G=10000) %>% select(i,G_star,phat))
View(df %>% filter(G==10000) %>% select(i,G_star,phat))
df %>% filter(G_star >= 10000) %>% select(phat) %>% mean()
df %>% filter(G_star >= 10000) %>% select(phat)
df %>% mean(filter(G_star >= 10000) %>% select(phat))
df %>% filter(G_star >= 10000) %>% select(phat)
df %>% filter(G_star >= 10000) %>% select(phat) %>% summarise(mean())
df %>% filter(G_star >= 10000) %>% select(phat)
df %>% filter(G_star >= 10000) %>% group_by(C) %>% summarise(mean(phat))
df %>% filter(G_star >= 10000) %>% group_by(C_tilde) %>% summarise(mean(phat))
df %>% filter(G==10000) %>% group_by(C_tilde) %>% summarise(mean(phat))
# Meta =====================
# Title: Simulations
# Author: Wonjun, Juhyun, Sanghee
# Last Edit/Editor: Sep-11-2023 / Wonjun
# Description: haha
rm(list=ls())
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, here)
# here::here()
# here::i_am('analysis/code/simulations.R')
here::here()
###### DGP ######
source('analysis/code/simDGP.R')
# Create a plot of Y grouped by G
ggplot(df, aes(x = t, y = Y, group = factor(G), color = factor(G))) +
stat_summary(fun = mean, geom = "line") +
labs(title = "Mean Time Trend of Y by Group G",
x = "Time (t)",
y = "Mean Y",
color = "Group (G)")
###### Supersurvivor regression ######
source('analysis/code/supersurvivor.R')
View(df %>% filter(G==10000) %>% select(i,G_star,phat))
df %>% filter(G==10000) %>% group_by(C_tilde) %>% summarise(mean(phat))
###### DiD using reweighting #######
source('analysis/code/DDsurv.R')
time_variable <- 't'
unit_variable <- 'unit'
group_variable <- 'G'
df_DD <- df
df_DD['t_'] <- df_DD[time_variable]
df_DD['i_'] <- df_DD[unit_variable]
df_DD['G_'] <- df_DD[group_variable]
t_min <- df_DD['t_'] %>% min()
t_max <- df_DD['t_'] %>% max()  # we can get ATT from (t_min+1)~t_max
G_max <- df_DD[df_DD['G_']<100, 'G_'] %>% max()
G_censored <- df_DD['G'] %>% max()
results <- data.frame(G = rep(c(1:G_max), each=t_max),
t = rep(c(1:t_max), times=G_max))
results <- results %>% filter(G > t_min, t >= G)
results$ATT <- NA
results$ATT_reweight <- NA
# ATT(g,t)
for (i in 1:nrow(results)) {
g__ <- results[i, group_variable]
t__ <- results[i, time_variable]
T_group <- df_DD %>% filter(G_==g__)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
m0 <- lm('dY ~ x1+x2', data=C_group)
# regression imputation DD
T_group <- T_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
Em1 <- mean(T_group$dY)
T_group$Em0 <- predict(m0, newdata=T_group)
Em0 <- predict(m0, newdata=T_group) %>% mean()
# ATT(g,t)
results[i,'ATT'] <- Em1 - Em0
results[i,'ATT_reweight'] <- Em1 - weighted.mean(T_group$Em0, T_group$phat)
}
# ATT(g,t)
for (i in 1:nrow(results)) {
g__ <- results[i, group_variable]
t__ <- results[i, time_variable]
T_group <- df_DD %>% filter(G_==g__)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
m0 <- lm('dY ~ x1+x2', data=C_group)
# regression imputation DD
T_group <- T_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g__-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
Em1 <- mean(T_group$dY)
T_group$Em0 <- predict(m0, newdata=T_group)
Em0 <- predict(m0, newdata=T_group) %>% mean()
# ATT(g,t)
results[i,'ATT'] <- Em1 - Em0
results[i,'ATT_reweight'] <- Em1 - weighted.mean(T_group$Em0, T_group$phat)
}
# ATT(g,t)
for (i in 1:nrow(results)) {
g__ <- results[i, group_variable]
t__ <- results[i, time_variable]
T_group <- df_DD %>% filter(G_==g__)
C_group <- df_DD %>% filter(G_==G_censored)
# m(g,t|X)
C_group <- C_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g__-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
m0 <- lm('dY ~ x1+x2', data=C_group)
# regression imputation DD
T_group <- T_group %>%
mutate(Yt = ifelse(t_==t__,Y,NA),
Ygm1 = ifelse(t_==g__-1,Y,NA)) %>%
group_by(i_) %>%
mutate(dY = sum(Yt, na.rm=T) - sum(Ygm1, na.rm=T)) %>%
ungroup() %>%
distinct(i_, .keep_all=TRUE)
Em1 <- mean(T_group$dY)
T_group$Em0 <- predict(m0, newdata=T_group)
Em0 <- predict(m0, newdata=T_group) %>% mean()
# ATT(g,t)
results[i,'ATT'] <- Em1 - Em0
results[i,'ATT_reweight'] <- Em1 - weighted.mean(T_group$Em0, T_group$phat)
}
View(results)
# Meta =====================
# Title: Simulations
# Author: Wonjun, Juhyun, Sanghee
# Last Edit/Editor: Sep-11-2023 / Wonjun
# Description: haha
rm(list=ls())
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, here)
# here::here()
# here::i_am('analysis/code/simulations.R')
here::here()
###### DGP ######
source('analysis/code/simDGP.R')
###### Supersurvivor regression ######
source('analysis/code/supersurvivor.R')
View(df)
###### DiD using reweighting #######
source('analysis/code/DDsurv.R')
View(results)
View(df1)
# to compare with p_uncured:
df1 <- df %>% select(C, C_tilde, phat, p_cured)
View(df1)
rm(list=ls())
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, here)
###### DGP ######
source('analysis/code/simDGP.R')
###### Supersurvivor regression ######
source('analysis/code/supersurvivor.R')
###### DiD using reweighting #######
source('analysis/code/DDsurv.R')
View(df1)
View(results)
# histrogram of G other than 10000
hist(df$G[df$G != 10000])
# Meta =====================
# Title: Simulations
# Author: Wonjun, Juhyun, Sanghee
# Last Edit/Editor: Sep-11-2023 / Wonjun
# Description: haha
rm(list=ls())
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, here)
###### DGP ######
source('analysis/code/simDGP.R')
# histrogram of G other than 10000
hist(df$G[df$G != 10000])
# Plot Y grouped by G
ggplot(df, aes(x = t, y = Y, group = factor(G), color = factor(G))) +
geom_line() +
labs(title = "Time Trend of Y by Group G",
x = "Time (t)",
y = "Y",
color = "Group (G)")
# Plot average Y grouped by G
ggplot(df, aes(x = G, y = Y, group = factor(G), color = factor(G))) +
stat_summary(fun = mean, geom = "line") +
labs(title = "Mean Y by Group G",
x = "Group (G)",
y = "Mean Y",
color = "Group (G)")
# Plot average Y grouped by G
ggplot(df, aes(x = t, y = Y, group = factor(G), color = factor(G))) +
stats_summary(fun = mean, geom = 'line') +
labs(title = "Time Trend of Y by Group G",
x = "Time (t)",
y = "Y",
color = "Group (G)")
# Plot average Y grouped by G
ggplot(df, aes(x = t, y = Y, group = factor(G), color = factor(G))) +
stat_summary(fun = mean, geom = 'line') +
labs(title = "Time Trend of Y by Group G",
x = "Time (t)",
y = "Y",
color = "Group (G)")
###### Supersurvivor regression ######
source('analysis/code/supersurvivor.R')
